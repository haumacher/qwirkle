syntax="msgbuf";

package qwirkle.common.messages;

/**
 * Base class for messages sent from the client to the server.
 */
abstract message ClientMessage {
	// Pure base class.
}

/**
 * Base class for {@link ClientMessage}s that are directly answered by the server.
 * 
 * @see #msgId
 */
abstract message Request extends ClientMessage {
	/**
	 * Identifier for this request/response communication.
	 * 
	 * <p>
	 * The identifier is produced by the client. The server flags its {@link Response} with the same value in {@link Response#msgId}.
	 * </p> 
	 */
	string msgId;
}

/**
 * Base class for messages issued by the server and sent to the client.
 */
abstract message ServerMessage {
	// Pure base class.
}

/**
 * {@link ServerMessage} that is sent in direct response to a {@link Request} message.
 * 
 * @see #msgId
 */
abstract message Response extends ServerMessage {
	/**
	 * Value from {@link Request#msgId} as provided by the client. This value can be used by the client to associate this response to the original {@link Request}.
	 */
	string msgId;
}

// Model types

message GameInfo {
	string gameId;
	string name;
	repeated UserInfo users;
}

message UserInfo {
	string userId;
	string name;
}

// Concrete messages.

message CreateGame extends Request {
	string name;
}

message CreateGameResult extends Response {
	GameInfo game;
}

message ServerError extends Response {
	string `message`;
}

message Login extends ClientMessage {
	string name;
}

message Logout extends ClientMessage {
}

message OpenGames extends ServerMessage {
	repeated GameInfo games;
}

message GameOpened extends ServerMessage {
	GameInfo game;
}

message GameClosed extends ServerMessage {
	string gameId;
}

message UserJoined extends ServerMessage {
	string gameId;
	UserInfo user;
}

message UserLeft extends ServerMessage {
	string gameId;
	string userId;
}

